name: Tag-based Deployment

on:
  # push:
  #   branches:
  #     - production
  pull_request:
    branches:
      - main
jobs:
  deployment:
    runs-on: ubuntu-latest
    concurrency: production
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Initialize Terraform
        run: terraform init
        working-directory: ./firebase-terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./firebase-terraform
        env:
          TF_VAR_oauth_client_id_google: ${{ secrets.AUTH_GOOGLE_ID }}
          TF_VAR_oauth_client_secret_google: ${{ secrets.AUTH_GOOGLE_SECRET }}
          TF_VAR_oauth_client_id_github: ${{ secrets.AUTH_GITHUB_ID }}
          TF_VAR_oauth_client_secret_github: ${{ secrets.AUTH_GITHUB_SECRET }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./firebase-terraform
        env:
          TF_VAR_oauth_client_id_google: ${{ secrets.AUTH_GOOGLE_ID }}
          TF_VAR_oauth_client_secret_google: ${{ secrets.AUTH_GOOGLE_SECRET }}
          TF_VAR_oauth_client_id_github: ${{ secrets.AUTH_GITHUB_ID }}
          TF_VAR_oauth_client_secret_github: ${{ secrets.AUTH_GITHUB_SECRET }}

      - uses: oven-sh/setup-bun@v1
      - name: cache-node-modules
        uses: actions/cache@v3
        id: cache-bun
        env:
          cache-name: cache-node-modules
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-build-cache-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-build-cache-bun-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: bun install
        if: ${{ steps.cache-bun.outputs.cache-hit != 'true' }}
        run: bun i
      - name: install firebase-tools
        run: bun i -g firebase-tools
      - name: Rewrite .env.production file
        working-directory: ./one-pager-maker
        shell: bash
        run: |
          echo "$(cat <<EOF
          VITE_API_KEY=${{ secrets.PROG_VITE_API_KEY }}
          VITE_AUTH_DOMAIN=${{ secrets.PROG_VITE_AUTH_DOMAIN }}
          VITE_PROJECT_ID=${{ secrets.PROG_VITE_PROJECT_ID }}
          VITE_STORAGE_BUCKET=${{ secrets.PROG_VITE_STORAGE_BUCKET }}
          VITE_MESSAGING_SENDER_ID=${{ secrets.PROG_VITE_MESSAGING_SENDER_ID }}
          VITE_APP_ID=${{ secrets.PROG_VITE_APP_ID }}
          VITE_MEASUREMENT_ID=${{ secrets.PROG_VITE_MEASUREMENT_ID }}
          EOF
          )" >> .env.production
      - name: bun run build
        working-directory: ./one-pager-maker
        run: bun run build:prod
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.STAGING_FIREBASE_SERVICE_ACCOUNT  }}"
          channelId: live
          projectId: one-pager-maker-production
      - name: Test Failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure() || cancelled()
        with:
          details: Test Failed!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
