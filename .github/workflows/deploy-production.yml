name: deploy

# check
on:
  pull_request:
    branches:
      - main
# on:
#   push:
#     branches:
#       - main

jobs:
  deployment:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: one-pager-maker
    concurrency: production
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
      # - name: cache-node-modules
      #   uses: actions/cache@v3
      #   id: cache-bun
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     path: "**/node_modules"
      #     key: ${{ runner.os }}-build-cache-bun-${{ hashFiles('**/bun.lockb') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-cache-bun-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-
      # - name: bun install
      #   if: ${{ steps.cache-bun.outputs.cache-hit != 'true' }}
      #   run: bun i
      - name: install bun
        run: bun install
      - name: install firebase-tools
        run: bun i -g firebase-tools
      - name: bun run build
        run: bun run build
      - name: Create .env file
        shell: bash
        run: |
          touch .env
          echo "VITE_API_KEY=${{ secrets.VITE_API_KEY }}" >> .env
          echo "VITE_AUTH_DOMAIN=${{ secrets.VITE_AUTH_DOMAIN }}" >> .env
          echo "VITE_PROJECT_ID=${{ secrets.VITE_PROJECT_ID }}" >> .env
          echo "VITE_STORAGE_BUCKET=${{ secrets.VITE_STORAGE_BUCKET }}" >> .env
          echo "VITE_MESSAGING_SENDER_ID=${{ secrets.VITE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_APP_ID=${{ secrets.VITE_APP_ID }}" >> .env
          echo "VITE_MEASUREMENT_ID=${{ secrets.VITE_MEASUREMENT_ID }}" >> .env
      - name: test-integration
        run: bun run test-integration
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_ONE_PAGER_MAKER }}"
          channelId: live
          projectId: one-pager-maker
      - name: Install Playwright Browsers
        run: bun playwright install --with-deps
      - name: Run Playwright tests
        run: bun run e2e:all
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      # - name: Test Failure
      #   uses: rjstone/discord-webhook-notify@v1
      #   if: failure() || cancelled()
      #   with:
      #     details: Test Failed!
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
